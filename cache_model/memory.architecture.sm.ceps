kind Event;
kind Systemstate;


Event MemoryAccess;
Event CheckPageAvailable;
Systemstate MemPageInL1Cache,MemPageRequested;

val MemPageSize = 4;
comment{" Number of bytes in a single memory page.\n";};

MemPageInL1Cache = 0;
comment{"\n Flag indicating whether a requested memory position is available from the L1 cache.\n";};

MemPageRequested = 0;
comment{"\n Index of memory page requested.\n";};

Event L1CacheMiss;

sm{
    L1Cache;
    states{Initial;};
    sm{
        CPUInterface;
        states{Initial;Idle;MemoryAccessRequestReceived;};
        Actions{
            doCheckPageLoaded{{
                MemPageRequested = argv(1) / MemPageSize;
                CheckPageAvailable(MemPageRequested);                
            }};
        };
        t{Initial;Idle;};
        t{Idle;MemoryAccessRequestReceived;MemoryAccess;doCheckPageLoaded;};
        t{MemoryAccessRequestReceived;Idle;};
    };
    sm{
        Controller;
        states{Initial;Idle;CheckPageInCache;};
        Actions{
            doCheckPageAvailable{
                if(MemPageInL1Cache != argv(1) ){
                    MemPageInL1Cache = argv(1);
                    L1CacheMiss;
                }
            };
        };
        t{Initial;Idle;};
        t{Idle;CheckPageInCache;CheckPageAvailable;doCheckPageAvailable;};
        t{CheckPageInCache;Idle;};
    };
    t{Initial;CPUInterface;};
    t{Initial;Controller;};
};

sm{
    L1CacheObserver;
    cover{
        edges_upto_1;
    };
    states{Initial;Miss;};
    t{Initial;Miss;L1CacheMiss;};
    t{Miss;Initial;};
};

