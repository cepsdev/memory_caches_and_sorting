kind Event;
Event MemoryAccess;
Event CheckPageAvailable;

val MemPageSize = 4;

kind Systemstate;
Systemstate MemPageInL1Cache,MemPageRequested;

MemPageInL1Cache = 0;
MemPageRequested = 0;

sm{
    L1Cache;
    states{Initial;};
    sm{
        CPUInterface;
        states{Initial;Idle;MemoryAccessRequestReceived;};
        Actions{
            doCheckPageLoaded{
                print("\n\n","doCheckPageLoaded:",argv(1),"\n\n");
                MemPageRequested = argv(1) / MemPageSize;
                print(MemPageRequested,"\n");
            };
        };
        t{Initial;Idle;};
        t{Idle;MemoryAccessRequestReceived;MemoryAccess;doCheckPageLoaded;};
        t{MemoryAccessRequestReceived;Idle;};
    };
    sm{
        Controller;
        states{Initial;};
    };
    t{Initial;CPUInterface;};
    t{Initial;Controller;};
};

Simulation{
    Start{L1Cache;};
    {
     MemoryAccess(0);
     MemoryAccess(1);
     MemoryAccess(2);
     MemoryAccess(3);
     MemoryAccess(4);
    }
};